name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v3

    - name: JDK 설정
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Gradle 빌드
      run: ./gradlew clean build -x test

             # Docker 이미지를 빌드하기 전에 정리 단계 추가
    - name: Clean up Docker to free space
      run: |
        docker system prune -f
        docker volume prune -f

    - name: Docker 빌드 및 푸시
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/kurierfree_server .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/kurierfree_server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: EC2에 SSH 접속하여 배포
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/kurierfree_server:latest
          docker stop kurierfree_server || true
          docker rm kurierfree_server || true
          docker run -d -p 8080:8080 --name kurierfree_server ${{ secrets.DOCKER_USERNAME }}/kurierfree_server:latest
